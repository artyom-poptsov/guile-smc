@c -*-texinfo-*-
@c This file is part of Guile-SMC Reference Manual.
@c Copyright (C) 2021 Artyom V. Poptsov
@c See the file guile-smc.texi for copying conditions.

@node Context
@section Context

@code{(smc context context)} contains the implementation of a generic context
that can be used with an FSM to provide a memory.

@cindex Stanza
@cindex Buffer
@cindex Context
@deftp {Class} <context> [#:debug-mode?=#f]
The main class.

This class holds two kinds of stack memory: a buffer to store events (data
chunks) and a stanza that store a logical unit of data.
@end deftp

@deffn {Scheme Procedure} context-buffer-clear! (context <context>)
Clear the @var{context} buffer.
@end deffn

@deffn {Scheme Procedure} context-stanza-clear! (context <context>)
Clear the @var{context} stanza.
@end deffn

@deffn {Scheme Procedure} action:store context event
Store an @var{event} into a @var{context} buffer.
@end deffn

@deffn {Scheme Procedure} action:update-stanza context event
Store an @var{event} into a @var{context} stanza.
@end deffn

@subsection Character Context

@code{(smc context char-context)} contains an implementation of a character
context that can be used to handle a stream of characters.

@deftp {Class} <char-context> [#:debug-mode?=#f]
The main class.
@end deftp

@deffn  {Scheme Procedure} char-context-counter (ctx <char-context>)
Returns the value of the character counter of a context @var{ctx}.
@end deffn

@deffn {Scheme Procedure} char-context-row-number (ctx <char-context>)
Returns the current row number for a context @var{ctx}. 
@end deffn

@deffn {Scheme Procedure} char-context-col-number (ctx <char-context>)
Returns the current column number for a context @var{ctx}.
@end deffn

@subsubsection Guards

@deffn  {Scheme Procedure} guard:asterisk? ctx ch
@deffnx {Scheme Procedure} guard:equals-sign? ctx ch
@deffnx {Scheme Procedure} guard:newline? ctx ch
@deffnx {Scheme Procedure} guard:hyphen-minus? ctx ch
@deffnx {Scheme Procedure} guard:space? ctx ch
@deffnx {Scheme Procedure} guard:less-than-sign? ctx ch
@deffnx {Scheme Procedure} guard:letter? ctx ch
@deffnx {Scheme Procedure} guard:more-than-sign? ctx ch
@deffnx {Scheme Procedure} guard:colon? ctx ch
@deffnx {Scheme Procedure} guard:semicolon? ctx ch
@deffnx {Scheme Procedure} guard:eof-object? ctx ch
@deffnx {Scheme Procedure} guard:single-quote? ctx ch
@deffnx {Scheme Procedure} guard:left-square-bracket? ctx ch
@deffnx {Scheme Procedure} guard:right-square-bracket? ctx ch
@deffnx {Scheme Procedure} guard:at-symbol? ctx ch
These procedures check if a @var{ch} is a specific symbol.
@end deffn

@subsubsection Actions

@deffn {Scheme Procedure} action:syntax-error ctx ch
Throw a syntactic error with the current symbol @var{ch}, row, column and the
context @var{ctx}.
@end deffn

@c Local Variables:
@c TeX-master: "guile-smc.texi"
@c End:
